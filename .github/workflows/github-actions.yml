name: Test & Deploy Slack Messenger
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14.1
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: "24.1"
          elixir-version: "1.12.3"
          experimental-otp: true
      - run: echo $SLACK_API_BASE_URL
      - run: echo $SLACK_API_POOL_SIZE
      - run: echo $SLACK_API_BOT_USER_OAUTH_TOKEN
      - run: mix deps.get
      - run: MIX_ENV=test mix test
        env:
          SLACK_API_BASE_URL: ${{ secrets.SLACK_API_BASE_URL }}
          SLACK_API_POOL_SIZE: ${{ secrets.SLACK_API_POOL_SIZE }}
          SLACK_API_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_API_BOT_USER_OAUTH_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/master' # Only run this job if it is on the main branch
    runs-on: ubuntu-latest
    needs: test
    environment: development
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          ref: master # Check out master instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.9
      - name: Gigalixir Action
        uses: mhanberg/gigalixir-action@v0.6.0
        with:
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP }}
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          MIGRATIONS: false # defaults to true
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SLACK_API_BASE_URL: ${{ secrets.SLACK_API_BASE_URL }}
          SLACK_API_POOL_SIZE: ${{ secrets.SLACK_API_POOL_SIZE }}
          SLACK_API_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_API_BOT_USER_OAUTH_TOKEN }}
          # GIGALIXIR_CLEAN: true # defaults to false
